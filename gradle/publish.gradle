apply plugin: 'maven-publish'

/**
 * We lazy init the assembleRelease task as its added by the android plugin
 */
task androidReleaseJar(type: Jar, dependsOn: "assembleRelease") {
    from "$buildDir/classes/release/"
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
}

task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    //basename = artifact_id
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

publishing {
    repositories {
        if(project.has("sonatypePrivateUrl")){
            maven {
                credentials {
                    username project.getProperty("sonatypePrivateUsername")
                    password project.getProperty("sonatypePrivatePassword")
                }
                url project.getProperty("sonatypePrivateUrl")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifact("$buildDir/outputs/aar/${project.name}-release.aar")
            artifact androidJavadocsJar
            artifact androidSourcesJar

            artifactId "contrast-${project.name}"

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'runtime')
                    }
                }
            }
        }

    }
}